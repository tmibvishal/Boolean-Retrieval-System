#include <string>
#include <vector>
#include <bitset>
#include <iostream>
#include <cassert>
#include "config.h"
#include "compression.h"

using namespace std;

// -Iinclude -Llib/libsnappy.a -lsnappy
int main() {
    vector<doc_int> vec = {119, 1080, 1440, 2010, 12345, 628910, 1411121315, 1615181920};
    // vector<doc_int> vec = {35005211,42999170,84353895,135497281,137806862,149798315,184803526,233665123,278722862,294702567,304089172,336465782,356426808,412776091,424238335,468703135,491705403,511702305,521595368,572660336,596516649,608413784,610515434,628175011,635723058,709393584,719885386,749241873,752392754,756898537,760313750,783368690,805750846,846930886,855636226,859484421,861021530,939819582,943947739,945117276,982906996,1025202362,1059961393,1100661313,1101513929,1102520059,1125898167,1129566413,1131176229,1141616124,1159126505,1189641421,1264095060,1303455736,1315634022,1350490027,1365180540,1369133069,1374344043,1411549676,1424268980,1433925857,1469348094,1474612399,1477171087,1540383426,1548233367,1585990364,1632621729,1649760492,1653377373,1656478042,1681692777,1714636915,1726956429,1734575198,1749698586,1780695788,1801979802,1804289383,1827336327,1843993368,1889947178,1911759956,1914544919,1918502651,1937477084,1956297539,1957747793,1967513926,1973594324,1984210012,1998898814,2001100545,2038664370,2044897763,2053999932,2084420925,2089018456,2145174067,4294967295};
    vector<doc_int> vec2 = vec;
    //for (int i=vec.size()-1; i>0; i--) {
    //    vec[i] -= vec[i-1];
    //}
    //string s;
    //for (int x: vec) {
    //    bitset<256> b(x);
    //    string s3 = b.to_string();
    //    s3.erase(0, min(s3.find_first_not_of('0'), s3.size()-1));
    //
    //    string s2 = (bitset<256>(s3.size())).to_string();
    //    s2.erase(0, min(s2.find_first_not_of('0'), s2.size()-1));
    //
    //    int u = s2.size();
    //    s3 = s3.substr(1);
    //    s2 = s2.substr(1);
    //    string s1(u, '1');
    //    s1.back() = '0';
    //
    //    s += s1 + s2 + s3;
    //}

    vector<char> compressed_list = compress_list(vec2, 3);
    vector<doc_int> post_list = decompress_list(compressed_list, 3, vec.size());
    cout << "hello" << endl;
    for (doc_int d: post_list) {
        cout << d << ", ";
    }
    cout << "hello" << endl;
    assert(vec == post_list);
    return 0;
}